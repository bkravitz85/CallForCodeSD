<apex:page standardStylesheets="false" >
    <style>
    body {
  margin: 0;
  color: white;
  font-family: monospace;
  font-size: 15px;
	background-image: url('http://jhfireassociation.com/wp-content/uploads/2015/03/fire5.jpg');
}

.header {
  padding: 5px 20px;
}

.header p {
  padding-left: 20px;
  max-width: 630px;
}

* {
  box-sizing: border-box;
}

.Block {
  margin: 1em;
  display: block;
  background: tomato;
  padding: 0.5em;
}

.Block.correct {
  background: #5ea25d;
}

.col {
  display: block;
  width: 100%;
}

.col > * {
  float: left;
}

label {
  height: 18px;
  display: inline-block;
  width: 140px;
  text-align: right;
  vertical-align: middle;
  padding-right: 10px;
  margin: 2px 0;
}

input {
  height: 18px;
  font-size: 15px;
  border: none;
  padding: 2px;
  margin: 6px 0 0;
}

pre {
  height: 18px;
  display: inline-block;
  margin: 6px 0 0;
  padding: 4px 4px 2px;
  background: rgba(0, 0, 0, 0.2);
  text-overflow: ellipsis;
  white-space: nowrap;
  overflow: hidden;
  max-width: 100%;
}

button {
  margin: 6px 0 0;
  display: inline-block;
  border: 1px solid rgba(255, 255, 255, 0.5);
  padding: 5px 10px;
  color: white;
  background: rgba(0, 0, 0, 0.3);
  transition: background 0.3s ease;
}

button:hover {
  background: rgba(0, 0, 0, 0.5);
        /* Header */
.large-header {
	position: relative;
	width: 100%;
	background: #333;
	overflow: hidden;
	background-size: cover;
	background-position: center center;
	z-index: 1;
}

#large-header {
 
}

.main-title {
	position: absolute;
	margin: 0;
	padding: 0;
	color: #f9f1e9;
	text-align: center;
	top: 20%;
	left: 50%;
	-webkit-transform: translate3d(-50%,-50%,0);
	transform: translate3d(-50%,-50%,0);
}

.demo-1 .main-title {
	text-transform: uppercase;
	font-size: 4.2em;
	letter-spacing: 0.1em;
}

.main-title .thin {
	font-weight: 200;
}

@media only screen and (max-width : 768px) {
	.demo-1 .main-title {
		font-size: 3em;
	}
}
}</style>
    <script>
  
function showBlockchain() {
    var x = document.getElementById("large-header");
    if (x.style.display === "none") {
        x.style.display = "block";
    } else {
        x.style.display = "none";
    }
} 
        </script>
    <script>
    (function() {

    var width, height, largeHeader, canvas, ctx, points, target, animateHeader = true;

    // Main
    initHeader();
    initAnimation();
    addListeners();

    function initHeader() {
        width = window.innerWidth;
        height = window.innerHeight;
        target = {x: width/2, y: height/2};

        largeHeader = document.getElementById('large-header');
        largeHeader.style.height = height+'px';

        canvas = document.getElementById('demo-canvas');
        canvas.width = width;
        canvas.height = height;
        ctx = canvas.getContext('2d');

        // create points
        points = [];
        for(var x = 0; x < width; x = x + width/20) {
            for(var y = 0; y < height; y = y + height/20) {
                var px = x + Math.random()*width/20;
                var py = y + Math.random()*height/20;
                var p = {x: px, originX: px, y: py, originY: py };
                points.push(p);
            }
        }

        // for each point find the 5 closest points
        for(var i = 0; i < points.length; i++) {
            var closest = [];
            var p1 = points[i];
            for(var j = 0; j < points.length; j++) {
                var p2 = points[j]
                if(!(p1 == p2)) {
                    var placed = false;
                    for(var k = 0; k < 5; k++) {
                        if(!placed) {
                            if(closest[k] == undefined) {
                                closest[k] = p2;
                                placed = true;
                            }
                        }
                    }

                    for(var k = 0; k < 5; k++) {
                        if(!placed) {
                            if(getDistance(p1, p2) < getDistance(p1, closest[k])) {
                                closest[k] = p2;
                                placed = true;
                            }
                        }
                    }
                }
            }
            p1.closest = closest;
        }

        // assign a circle to each point
        for(var i in points) {
            var c = new Circle(points[i], 2+Math.random()*2, 'rgba(255,255,255,0.3)');
            points[i].circle = c;
        }
    }

    // Event handling
    function addListeners() {
        if(!('ontouchstart' in window)) {
            window.addEventListener('mousemove', mouseMove);
        }
        window.addEventListener('scroll', scrollCheck);
        window.addEventListener('resize', resize);
    }

    function mouseMove(e) {
        var posx = posy = 0;
        if (e.pageX || e.pageY) {
            posx = e.pageX;
            posy = e.pageY;
        }
        else if (e.clientX || e.clientY)    {
            posx = e.clientX + document.body.scrollLeft + document.documentElement.scrollLeft;
            posy = e.clientY + document.body.scrollTop + document.documentElement.scrollTop;
        }
        target.x = posx;
        target.y = posy;
    }

    function scrollCheck() {
        if(document.body.scrollTop > height) animateHeader = false;
        else animateHeader = true;
    }

    function resize() {
        width = window.innerWidth;
        height = window.innerHeight;
        largeHeader.style.height = height+'px';
        canvas.width = width;
        canvas.height = height;
    }

    // animation
    function initAnimation() {
        animate();
        for(var i in points) {
            shiftPoint(points[i]);
        }
    }

    function animate() {
        if(animateHeader) {
            ctx.clearRect(0,0,width,height);
            for(var i in points) {
                // detect points in range
                if(Math.abs(getDistance(target, points[i])) < 4000) {
                    points[i].active = 0.3;
                    points[i].circle.active = 0.6;
                } else if(Math.abs(getDistance(target, points[i])) < 20000) {
                    points[i].active = 0.1;
                    points[i].circle.active = 0.3;
                } else if(Math.abs(getDistance(target, points[i])) < 40000) {
                    points[i].active = 0.02;
                    points[i].circle.active = 0.1;
                } else {
                    points[i].active = 0;
                    points[i].circle.active = 0;
                }

                drawLines(points[i]);
                points[i].circle.draw();
            }
        }
        requestAnimationFrame(animate);
    }

    function shiftPoint(p) {
        TweenLite.to(p, 1+1*Math.random(), {x:p.originX-50+Math.random()*100,
            y: p.originY-50+Math.random()*100, ease:Circ.easeInOut,
            onComplete: function() {
                shiftPoint(p);
            }});
    }

    // Canvas manipulation
    function drawLines(p) {
        if(!p.active) return;
        for(var i in p.closest) {
            ctx.beginPath();
            ctx.moveTo(p.x, p.y);
            ctx.lineTo(p.closest[i].x, p.closest[i].y);
            ctx.strokeStyle = 'rgba(0,0,220,'+ p.active+')';
            ctx.stroke();
        }
    }

    function Circle(pos,rad,color) {
        var _this = this;

        // constructor
        (function() {
            _this.pos = pos || null;
            _this.radius = rad || null;
            _this.color = color || null;
        })();

        this.draw = function() {
            if(!_this.active) return;
            ctx.beginPath();
            ctx.arc(_this.pos.x, _this.pos.y, _this.radius, 0, 2 * Math.PI, false);
            ctx.fillStyle = 'rgba(0,100,200,'+ _this.active+')';
            ctx.fill();
        };
    }

    // Util
    function getDistance(p1, p2) {
        return Math.pow(p1.x - p2.x, 2) + Math.pow(p1.y - p2.y, 2);
    }
    
})();
    </script>
            <apex:includeScript value="https://unpkg.com/carbon-components@latest/scripts/carbon-components.js"/>
    <apex:includeScript value="https://unpkg.com/carbon-components/umd/index.js"/>
<apex:stylesheet value="https://unpkg.com/carbon-addons-bluemix@latest/css/carbon-components.min.css"/>
<apex:includeScript value="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"/>
    <apex:stylesheet value="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css"/>
    <c:ibmMyCloudTitle />
    <div class="container text-center">
  <div class="donation-interface">
  <h1>Donate Your Unused Data to Fight Fires</h1>
  <p> 100% of your donation goes towards supporting first responders </p>

  <div class="form-group">
  
    <div class="btn-group btn-group-lg btn-amount-group" role="group" aria-lable="...">
    <button type="button" class="btn btn-amount btn-amount-number">1GB</button>
    <button type="button" class="btn btn-amount btn-amount-number" >5GB</button>
    <button type="button" class="btn btn-amount btn-amount-number">10GB</button>
    <button type="button" id="other" class="btn btn-amount">Other</button>
  </div>
    
    <div id="input-amount">
      <div class="input-group">
        <div class="input-group-addon">Gb</div>
          <input type="text" class="form-control" id="exampleInputAmount" placeholder="Data in Gb"/>
      </div>  
    </div>

      <div>
      <h3>
          Choose Your Carrier:
      </h3>          
          <select name='Choose Your Carrier' style="width: 200px;" >
              <option title='Verizon' value='verizon'>Verizon</option>
              <option title='AT&T' value='Att'>ATT</option>
              <option title='Tmobile' value='Tmobile'>TMobile</option>
          </select>
          
      </div>
      </div>  
    
 
  </div>

  </div>
  <div>

  <div class="funding-stats"> 
    <p>100% of your donation goes towards supporting first responders</p>
  </div>
<div class="header">
  <h1>BlockChain Donation Proof of Concept</h1>
  <p>
    The hash of a block is formed with 3 factors in this scenario. Data = Location + Donation + DisasterArea
  </p>
      <button style="height:100px;width:250px;font-weight:900;font-size:30px;">DONATE</button>

</div>

<div id="large-header" class="large-header" style="visibility: hidden" >
    <h1 class="main-title">Generating <span class="thin">Blockchain</span></h1>
</div>

</div>
</apex:page>